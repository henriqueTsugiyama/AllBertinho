{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { createBrowserHistory } from 'history';\nimport store from '../../../store';\nimport { signInSuccess, signInFailure } from './actions';\nimport api from '../../../services/api';\nimport { toast } from 'react-toastify';\nconst history = createBrowserHistory();\nexport function* signInRequest({\n  payload\n}) {\n  try {\n    const {\n      email,\n      password\n    } = payload;\n    const response = yield call(api.post, 'signin', {\n      email,\n      password\n    });\n    const {\n      user,\n      token\n    } = response.data;\n    const {\n      admin\n    } = user;\n    yield put(signInSuccess(token, user));\n    api.defaults.headers[\"x-access-token\"] = token;\n\n    if (admin === true) {\n      history.push('/admin');\n      window.location.reload();\n      return;\n    }\n\n    history.push('/voce');\n    window.location.reload();\n  } catch (err) {\n    toast.error('Usu치rio ou senha inv치lidos!');\n    yield put(signInFailure());\n  }\n}\nexport function* persistRehyadrate({\n  payload\n}) {\n  const {\n    token\n  } = store.getState().auth;\n  if (!token) return;\n  api.defaults.headers[\"x-access-token\"] = token;\n}\nexport default all([takeLatest('SIGNIN_REQUEST', signInRequest), takeLatest('persist/REHYDRATE', persistRehyadrate)]);","map":{"version":3,"sources":["/home/henrique_yasuo/Documents/AllBertinho/src/store/modules/auth/sagas.js"],"names":["takeLatest","call","put","all","createBrowserHistory","store","signInSuccess","signInFailure","api","toast","history","signInRequest","payload","email","password","response","post","user","token","data","admin","defaults","headers","push","window","location","reload","err","error","persistRehyadrate","getState","auth"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,WAA7C;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,OAAO,GAAGN,oBAAoB,EAApC;AAEA,OAAO,UAAUO,aAAV,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AAC1C,MAAI;AACF,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBF,OAA5B;AACA,UAAMG,QAAQ,GAAG,MAAMd,IAAI,CAACO,GAAG,CAACQ,IAAL,EAAW,QAAX,EAAqB;AAC9CH,MAAAA,KAD8C;AAE9CC,MAAAA;AAF8C,KAArB,CAA3B;AAKA,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBH,QAAQ,CAACI,IAAjC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAYH,IAAlB;AACA,UAAMf,GAAG,CAACI,aAAa,CAACY,KAAD,EAAQD,IAAR,CAAd,CAAT;AACAT,IAAAA,GAAG,CAACa,QAAJ,CAAaC,OAAb,CAAqB,gBAArB,IAAyCJ,KAAzC;;AAEA,QAAIE,KAAK,KAAK,IAAd,EAAoB;AAClBV,MAAAA,OAAO,CAACa,IAAR,CAAa,QAAb;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACA;AACD;;AAEDhB,IAAAA,OAAO,CAACa,IAAR,CAAa,OAAb;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAED,GArBD,CAqBC,OAAMC,GAAN,EAAW;AACVlB,IAAAA,KAAK,CAACmB,KAAN,CAAY,6BAAZ;AAEA,UAAM1B,GAAG,CAACK,aAAa,EAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUsB,iBAAV,CAA4B;AAAEjB,EAAAA;AAAF,CAA5B,EAAyC;AAC9C,QAAM;AAAEM,IAAAA;AAAF,MAAYb,KAAK,CAACyB,QAAN,GAAiBC,IAAnC;AAEA,MAAG,CAACb,KAAJ,EAAW;AAEXV,EAAAA,GAAG,CAACa,QAAJ,CAAaC,OAAb,CAAqB,gBAArB,IAAyCJ,KAAzC;AACD;AAED,eAAef,GAAG,CAAC,CACjBH,UAAU,CAAC,gBAAD,EAAmBW,aAAnB,CADO,EAEjBX,UAAU,CAAC,mBAAD,EAAsB6B,iBAAtB,CAFO,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { createBrowserHistory } from 'history';\nimport store from '../../../store';\n\nimport { signInSuccess, signInFailure } from './actions';\nimport api from '../../../services/api';\nimport { toast } from 'react-toastify';\n\nconst history = createBrowserHistory();\n\nexport function* signInRequest({ payload }) {\n  try {\n    const { email, password } = payload;\n    const response = yield call(api.post, 'signin', {\n      email,\n      password\n    });\n\n    const { user, token } = response.data;\n    const { admin } = user;\n    yield put(signInSuccess(token, user));\n    api.defaults.headers[\"x-access-token\"] = token;\n\n    if (admin === true) {\n      history.push('/admin');\n      window.location.reload();\n      return;\n    }\n\n    history.push('/voce');\n    window.location.reload();\n\n  }catch(err) {\n    toast.error('Usu치rio ou senha inv치lidos!');\n\n    yield put(signInFailure());\n  }\n}\n\nexport function* persistRehyadrate({ payload }) {\n  const { token } = store.getState().auth;\n  \n  if(!token) return;\n\n  api.defaults.headers[\"x-access-token\"] = token;\n}\n\nexport default all([\n  takeLatest('SIGNIN_REQUEST', signInRequest),\n  takeLatest('persist/REHYDRATE', persistRehyadrate)\n]);\n"]},"metadata":{},"sourceType":"module"}